grammar Numbers;

number: BINARY;

NEWLINE : [\r\n ]+;

BINARY : BIN_DIGIT+ 'b';
DECIMAL: '-'?DEC_DIGIT+;
REAL: '-'?DEC_DIGIT+'.'DEC_DIGIT+;
HEXADECIMAL: '0''x'HEX_DIGIT+;
EXPONENCIAL: (DECIMAL|REAL)[e|E][-|'+']DEC_DIGIT+;

SIMB_SOMA: '+';
SIMB_SUBT: '-';
SIMB_MULT: '*';
SIMB_DIVS: '/';
SIMB_EXPO: '^';

BIN_DIGIT: [01];
DEC_DIGIT: [0-9];
HEX_DIGIT: [0-9|a-f|A-F];

COMANDO_STATUS: 'status';
COMANDO_RESET: 'reset';